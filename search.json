[{"title":"Linux安装JDK","path":"/2023/08/31/Linux安装JDK/","content":"1、CentOS安装JDK jdk1.8下载地址：https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html jdk11下载地址：https://www.oracle.com/java/technologies/javase-jdk11-downloads.html jdk14下载地址：https://www.oracle.com/java/technologies/javase-jdk14-downloads.html A、方式一（rpm方式）#需要提前下载好rpm包 #安装之前检测jdk是否安装 rpm -qa | grep java #执行安装 rpm -ivh jdk-8u251-linux-x64.rpm #检测jdk版本 java -version B、方式二（压缩包）#需要提前下载好jdk-8u251-linux-x64.tar.gz tar -zvxf jdk-8u251-linux-x64.tar.gz #配置环境变量 sudo vi /etc/profile #将一下配置添加到文件末尾（注意JAVA_HOME的位置） #java export JAVA_HOME=/usr/java/jdk1.8.0_181 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib sudo tee /etc/profile &lt;&lt;-'EOF' export JAVA_HOME=/home/yongzheng/application/jdk/jdk1.8.0_301 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib export M2_HOME=/home/yongzheng/application/maven export PATH=$PATH:$M2_HOME/bin EOF #重新加载配置 source /etc/profile #验证码 java -version #MAC sudo tee ~/.bash_profile &lt;&lt;-'EOF' export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_333.jdk/Contents/Home export M2_HOME=/Library/Java/Maven/apache-maven-3.8.6 export GRADLE_HOME=/Library/Java/Gradle/gradle-7.4.2 export GRADLE_USER_HOME=/Library/Java/Repository export PATH=$JAVA_HOME/bin:$M2_HOME/bin:$GRADLE_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib EOF C、方式三（yum）#搜索jdk安装包 yum search java|grep jdk #搜索jdk 1.8.0版本 yum search java|grep jdk | grep 1.8.0 Repodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast java-1.8.0-openjdk.i686 : OpenJDK Runtime Environment 8 java-1.8.0-openjdk.x86_64 : OpenJDK Runtime Environment 8 java-1.8.0-openjdk-accessibility.i686 : OpenJDK accessibility connector java-1.8.0-openjdk-accessibility.x86_64 : OpenJDK accessibility connector java-1.8.0-openjdk-accessibility-debug.i686 : OpenJDK 8 accessibility connector java-1.8.0-openjdk-accessibility-debug.x86_64 : OpenJDK 8 accessibility java-1.8.0-openjdk-debug.i686 : OpenJDK Runtime Environment 8 with full debug on java-1.8.0-openjdk-debug.x86_64 : OpenJDK Runtime Environment 8 with full debug java-1.8.0-openjdk-demo.i686 : OpenJDK Demos 8 java-1.8.0-openjdk-demo.x86_64 : OpenJDK Demos 8 java-1.8.0-openjdk-demo-debug.i686 : OpenJDK Demos 8 with full debug on java-1.8.0-openjdk-demo-debug.x86_64 : OpenJDK Demos 8 with full debug on java-1.8.0-openjdk-devel.i686 : OpenJDK Development Environment 8 java-1.8.0-openjdk-devel.x86_64 : OpenJDK Development Environment 8 java-1.8.0-openjdk-devel-debug.i686 : OpenJDK Development Environment 8 with java-1.8.0-openjdk-devel-debug.x86_64 : OpenJDK Development Environment 8 with java-1.8.0-openjdk-headless.i686 : OpenJDK Headless Runtime Environment 8 java-1.8.0-openjdk-headless.x86_64 : OpenJDK Headless Runtime Environment 8 java-1.8.0-openjdk-headless-debug.i686 : OpenJDK Runtime Environment with full java-1.8.0-openjdk-headless-debug.x86_64 : OpenJDK Runtime Environment with full java-1.8.0-openjdk-javadoc.noarch : OpenJDK 8 API documentation java-1.8.0-openjdk-javadoc-debug.noarch : OpenJDK 8 API documentation for java-1.8.0-openjdk-javadoc-zip.noarch : OpenJDK 8 API documentation compressed java-1.8.0-openjdk-javadoc-zip-debug.noarch : OpenJDK 8 API documentation java-1.8.0-openjdk-src.i686 : OpenJDK Source Bundle 8 java-1.8.0-openjdk-src.x86_64 : OpenJDK Source Bundle 8 java-1.8.0-openjdk-src-debug.i686 : OpenJDK Source Bundle 8 for packages with java-1.8.0-openjdk-src-debug.x86_64 : OpenJDK Source Bundle 8 for packages with #安装下载jdk1.8，下载之后默认的目录为： /usr/lib/jvm/ yum install java-1.8.0-openjdk #验证码 java -version 2、Ubuntu安装JDK A、方式一#搜索可用jdk列表 sudo apt search openjdk-8 #安装jdk sudo apt-get install openjdk-8-jdk #验证码 java -version B、方式二（压缩包）#需要提前下载好jdk-8u251-linux-x64.tar.gz tar -zvxf jdk-8u251-linux-x64.tar.gz #配置环境变量 sudo vi /etc/profile #将一下配置添加到文件末尾（注意JAVA_HOME的位置） #java export JAVA_HOME=/usr/java/jdk1.8.0_181 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib #重新加载配置 source /etc/profile #验证码 java -version","tags":["Linux","JDK"],"categories":["Linux"]},{"title":"Linux工具安装","path":"/2023/08/31/Linux工具安装/","content":"1、lrzsz工具（上传下载）#Ubuntu下载安装包 sudo apt-get install -y lrzsz #CentOS下载安装包 yum install -y lrzsz #上传文件 rz #下载文件 sz 文件名 2、sftp工具（上传下载）#Xshell的sftp工具 #查看服务器的位置 pwd #查看本机的位置 lpwd #固定本机的位置 lcd #上传文件 或直接put 使用文件弹出框上传 #将本机lcd默认路径下的abc.txt 上传到服务器现在的位置 put abc.txt #上传多个文件 mput *.txt #下载文件 #将服务器现在位置的abc.txt文件，下载到lcd默认的本机的位置 get abc.txt #下载多个 mget *.txt 3、openssh-server工具（ssh远程）# Xshell无法SSH连接Ubuntu #下载ssh服务 sudo apt-get install openssh-server # 查看Ubuntu是否开启22端口 netstat -ntlp | grep 22 #检测端口是否开启 telnet 192.168.3.244 22 4、sshpass工具（ssh远程）# 安装软件包 sudo apt-get install sshpass # 直接远程Linux主机 # sshpass -p password ssh -p port username@IP 默认22端口 sshpass -p xxx ssh root@192.168.11.11 #从密码文件读取文件内容作为密码去远程连接主机 sshpass -f xxx.txt ssh root@192.168.11.11 #从远程主机上拉取文件到本地 sshpass -p &#123;密码&#125; scp &#123;用户名&#125;@&#123;主机IP&#125;:$&#123;远程主机目录&#125; $&#123;本地主机目录&#125; #将主机目录文件拷贝至远程主机目录 sshpass -p &#123;密码&#125; scp $&#123;本地主机目录&#125; &#123;用户名&#125;@&#123;主机IP&#125;:$&#123;远程主机目录&#125; #远程执行命令 sshpass -p password ssh username@host &lt;cmd> sshpass：用于非交互的ssh 密码验证 使用 -p 参数指定明文密码，然后直接登录远程服务器。 它支持密码从命令行,文件,环境变量中读取 1、从命令行方式传递密码 sshpass -p user_password ssh user_name@192.168.1.2 【登录远程机器】 sshpass -p user_password scp -P22 root@192.168.1.2:/home/test ./ 【远程机器/home/test 复制到本机当前目录】 还可以加参数 -q 【去掉进度显示】 2、从文件读取密码 echo \"user_password\" > user.passwd sshpass -f user.passwd ssh user_name@192.168.1.2 3、从环境变量获取密码 export SSHPASS=\"user_password\" sshpass -e ssh user_name@192.168.1.2 4、sshpass -p user_password ssh -o StrictHostKeyChecking=no user_name@192.168.1.2 【-o StrictHostKeyChecking=no 表示远程连接时不提示是否输入yes/no】 5、使用sshpass远程免密，在远程主机上执行shell命令，如下远程执行命令：touch /opt/file.txt sshpass -p user_password ssh -o StrictHostKeyChecking=no user_name@192.168.1.2 touch /opt/file.txt [注：shell命令要和sshpass命令写在一行] 5、ufw防火墙#安装防火墙 sudo apt-get install ufw #防火墙开启 sudo ufw enable #防火墙重启 sudo ufw reload #关闭防火墙 sudo ufw disable #开放22端口 sudo ufw allow 22 #禁用22端口 sudo ufw delete allow 22 #查看端口开启状态 sudo ufw status #允许此IP访问所有的本机端口 sudo ufw allow from 192.168.3.135 #禁止外部访问SMTP服务 sudo ufw deny smtp #删除上面建立的某条规则 sudo ufw delete allow smtp #推荐使用 sudo apt-get install ufw sudo ufw enable sudo ufw default deny 6.定时任务 #安装定时工具 yum install cronie #启动服务 service crond start #重启服务 service crond restart #关闭服务 service crond stop #重新加载服务 service crond reload #查看状态 service crond status 0 0 6 * * ? true > /var/log/nginx/access.log 0 0 6 * * ? true > /var/log/nginx/error.log :wq #保存 # 编辑定时命令 出发vim编辑器 crontab -e #查看当前所有定时任务 crontab -l #删除当前所有定时任务 crontab -r","tags":["Linux"],"categories":["Linux"]},{"title":"Linux工具安装","path":"/notes/Linux工具安装.html","content":"1、lrzsz工具（上传下载）#Ubuntu下载安装包 sudo apt-get install -y lrzsz #CentOS下载安装包 yum install -y lrzsz #上传文件 rz #下载文件 sz 文件名 2、sftp工具（上传下载）#Xshell的sftp工具 #查看服务器的位置 pwd #查看本机的位置 lpwd #固定本机的位置 lcd #上传文件 或直接put 使用文件弹出框上传 #将本机lcd默认路径下的abc.txt 上传到服务器现在的位置 put abc.txt #上传多个文件 mput *.txt #下载文件 #将服务器现在位置的abc.txt文件，下载到lcd默认的本机的位置 get abc.txt #下载多个 mget *.txt 3、openssh-server工具（ssh远程）# Xshell无法SSH连接Ubuntu #下载ssh服务 sudo apt-get install openssh-server # 查看Ubuntu是否开启22端口 netstat -ntlp | grep 22 #检测端口是否开启 telnet 192.168.3.244 22 4、sshpass工具（ssh远程）# 安装软件包 sudo apt-get install sshpass # 直接远程Linux主机 # sshpass -p password ssh -p port username@IP 默认22端口 sshpass -p xxx ssh root@192.168.11.11 #从密码文件读取文件内容作为密码去远程连接主机 sshpass -f xxx.txt ssh root@192.168.11.11 #从远程主机上拉取文件到本地 sshpass -p &#123;密码&#125; scp &#123;用户名&#125;@&#123;主机IP&#125;:$&#123;远程主机目录&#125; $&#123;本地主机目录&#125; #将主机目录文件拷贝至远程主机目录 sshpass -p &#123;密码&#125; scp $&#123;本地主机目录&#125; &#123;用户名&#125;@&#123;主机IP&#125;:$&#123;远程主机目录&#125; #远程执行命令 sshpass -p password ssh username@host &lt;cmd> sshpass：用于非交互的ssh 密码验证 使用 -p 参数指定明文密码，然后直接登录远程服务器。 它支持密码从命令行,文件,环境变量中读取 1、从命令行方式传递密码 sshpass -p user_password ssh user_name@192.168.1.2 【登录远程机器】 sshpass -p user_password scp -P22 root@192.168.1.2:/home/test ./ 【远程机器/home/test 复制到本机当前目录】 还可以加参数 -q 【去掉进度显示】 2、从文件读取密码 echo \"user_password\" > user.passwd sshpass -f user.passwd ssh user_name@192.168.1.2 3、从环境变量获取密码 export SSHPASS=\"user_password\" sshpass -e ssh user_name@192.168.1.2 4、sshpass -p user_password ssh -o StrictHostKeyChecking=no user_name@192.168.1.2 【-o StrictHostKeyChecking=no 表示远程连接时不提示是否输入yes/no】 5、使用sshpass远程免密，在远程主机上执行shell命令，如下远程执行命令：touch /opt/file.txt sshpass -p user_password ssh -o StrictHostKeyChecking=no user_name@192.168.1.2 touch /opt/file.txt [注：shell命令要和sshpass命令写在一行] 5、ufw防火墙#安装防火墙 sudo apt-get install ufw #防火墙开启 sudo ufw enable #防火墙重启 sudo ufw reload #关闭防火墙 sudo ufw disable #开放22端口 sudo ufw allow 22 #禁用22端口 sudo ufw delete allow 22 #查看端口开启状态 sudo ufw status #允许此IP访问所有的本机端口 sudo ufw allow from 192.168.3.135 #禁止外部访问SMTP服务 sudo ufw deny smtp #删除上面建立的某条规则 sudo ufw delete allow smtp #推荐使用 sudo apt-get install ufw sudo ufw enable sudo ufw default deny 6.定时任务 #安装定时工具 yum install cronie #启动服务 service crond start #重启服务 service crond restart #关闭服务 service crond stop #重新加载服务 service crond reload #查看状态 service crond status 0 0 6 * * ? true > /var/log/nginx/access.log 0 0 6 * * ? true > /var/log/nginx/error.log :wq #保存 # 编辑定时命令 出发vim编辑器 crontab -e #查看当前所有定时任务 crontab -l #删除当前所有定时任务 crontab -r"},{"title":"关于","path":"/about/index.html","content":"关于我我是一个在命运长河里挣扎的小鱼，90后，目前是小白一枚。虽然心中不甘，但是目前确实是 Worst One 。目标是成为全栈工程师、系统架构师。虽然前路迷茫，但是我会一步一步往前走。 关于主题Hexo - LiveForCode 主题是根据 BNDong的博客样式复制过来的，其中也借鉴了 Hexo - NexT主题的样式。可能这个主题还有很多不尽人意的地方，在后续的阶段我会不断地完善，如果有关于主题的相关问题，欢迎联系我。"},{"title":"Linux安装JDK","path":"/notes/Linux安装JDK.html","content":"1、CentOS安装JDK jdk1.8下载地址：https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html jdk11下载地址：https://www.oracle.com/java/technologies/javase-jdk11-downloads.html jdk14下载地址：https://www.oracle.com/java/technologies/javase-jdk14-downloads.html A、方式一（rpm方式）#需要提前下载好rpm包 #安装之前检测jdk是否安装 rpm -qa | grep java #执行安装 rpm -ivh jdk-8u251-linux-x64.rpm #检测jdk版本 java -version B、方式二（压缩包）#需要提前下载好jdk-8u251-linux-x64.tar.gz tar -zvxf jdk-8u251-linux-x64.tar.gz #配置环境变量 sudo vi /etc/profile #将一下配置添加到文件末尾（注意JAVA_HOME的位置） #java export JAVA_HOME=/usr/java/jdk1.8.0_181 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib sudo tee /etc/profile &lt;&lt;-'EOF' export JAVA_HOME=/home/yongzheng/application/jdk/jdk1.8.0_301 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib export M2_HOME=/home/yongzheng/application/maven export PATH=$PATH:$M2_HOME/bin EOF #重新加载配置 source /etc/profile #验证码 java -version #MAC sudo tee ~/.bash_profile &lt;&lt;-'EOF' export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_333.jdk/Contents/Home export M2_HOME=/Library/Java/Maven/apache-maven-3.8.6 export GRADLE_HOME=/Library/Java/Gradle/gradle-7.4.2 export GRADLE_USER_HOME=/Library/Java/Repository export PATH=$JAVA_HOME/bin:$M2_HOME/bin:$GRADLE_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib EOF C、方式三（yum）#搜索jdk安装包 yum search java|grep jdk #搜索jdk 1.8.0版本 yum search java|grep jdk | grep 1.8.0 Repodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast java-1.8.0-openjdk.i686 : OpenJDK Runtime Environment 8 java-1.8.0-openjdk.x86_64 : OpenJDK Runtime Environment 8 java-1.8.0-openjdk-accessibility.i686 : OpenJDK accessibility connector java-1.8.0-openjdk-accessibility.x86_64 : OpenJDK accessibility connector java-1.8.0-openjdk-accessibility-debug.i686 : OpenJDK 8 accessibility connector java-1.8.0-openjdk-accessibility-debug.x86_64 : OpenJDK 8 accessibility java-1.8.0-openjdk-debug.i686 : OpenJDK Runtime Environment 8 with full debug on java-1.8.0-openjdk-debug.x86_64 : OpenJDK Runtime Environment 8 with full debug java-1.8.0-openjdk-demo.i686 : OpenJDK Demos 8 java-1.8.0-openjdk-demo.x86_64 : OpenJDK Demos 8 java-1.8.0-openjdk-demo-debug.i686 : OpenJDK Demos 8 with full debug on java-1.8.0-openjdk-demo-debug.x86_64 : OpenJDK Demos 8 with full debug on java-1.8.0-openjdk-devel.i686 : OpenJDK Development Environment 8 java-1.8.0-openjdk-devel.x86_64 : OpenJDK Development Environment 8 java-1.8.0-openjdk-devel-debug.i686 : OpenJDK Development Environment 8 with java-1.8.0-openjdk-devel-debug.x86_64 : OpenJDK Development Environment 8 with java-1.8.0-openjdk-headless.i686 : OpenJDK Headless Runtime Environment 8 java-1.8.0-openjdk-headless.x86_64 : OpenJDK Headless Runtime Environment 8 java-1.8.0-openjdk-headless-debug.i686 : OpenJDK Runtime Environment with full java-1.8.0-openjdk-headless-debug.x86_64 : OpenJDK Runtime Environment with full java-1.8.0-openjdk-javadoc.noarch : OpenJDK 8 API documentation java-1.8.0-openjdk-javadoc-debug.noarch : OpenJDK 8 API documentation for java-1.8.0-openjdk-javadoc-zip.noarch : OpenJDK 8 API documentation compressed java-1.8.0-openjdk-javadoc-zip-debug.noarch : OpenJDK 8 API documentation java-1.8.0-openjdk-src.i686 : OpenJDK Source Bundle 8 java-1.8.0-openjdk-src.x86_64 : OpenJDK Source Bundle 8 java-1.8.0-openjdk-src-debug.i686 : OpenJDK Source Bundle 8 for packages with java-1.8.0-openjdk-src-debug.x86_64 : OpenJDK Source Bundle 8 for packages with #安装下载jdk1.8，下载之后默认的目录为： /usr/lib/jvm/ yum install java-1.8.0-openjdk #验证码 java -version 2、Ubuntu安装JDK A、方式一#搜索可用jdk列表 sudo apt search openjdk-8 #安装jdk sudo apt-get install openjdk-8-jdk #验证码 java -version B、方式二（压缩包）#需要提前下载好jdk-8u251-linux-x64.tar.gz tar -zvxf jdk-8u251-linux-x64.tar.gz #配置环境变量 sudo vi /etc/profile #将一下配置添加到文件末尾（注意JAVA_HOME的位置） #java export JAVA_HOME=/usr/java/jdk1.8.0_181 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib #重新加载配置 source /etc/profile #验证码 java -version"},{"title":"Linux安装JDK","path":"/wiki/ruoyi-vue-plus/Linux安装JDK.html","content":"1、CentOS安装JDK jdk1.8下载地址：https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html jdk11下载地址：https://www.oracle.com/java/technologies/javase-jdk11-downloads.html jdk14下载地址：https://www.oracle.com/java/technologies/javase-jdk14-downloads.html A、方式一（rpm方式）#需要提前下载好rpm包 #安装之前检测jdk是否安装 rpm -qa | grep java #执行安装 rpm -ivh jdk-8u251-linux-x64.rpm #检测jdk版本 java -version B、方式二（压缩包）#需要提前下载好jdk-8u251-linux-x64.tar.gz tar -zvxf jdk-8u251-linux-x64.tar.gz #配置环境变量 sudo vi /etc/profile #将一下配置添加到文件末尾（注意JAVA_HOME的位置） #java export JAVA_HOME=/usr/java/jdk1.8.0_181 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib sudo tee /etc/profile &lt;&lt;-'EOF' export JAVA_HOME=/home/yongzheng/application/jdk/jdk1.8.0_301 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib export M2_HOME=/home/yongzheng/application/maven export PATH=$PATH:$M2_HOME/bin EOF #重新加载配置 source /etc/profile #验证码 java -version #MAC sudo tee ~/.bash_profile &lt;&lt;-'EOF' export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_333.jdk/Contents/Home export M2_HOME=/Library/Java/Maven/apache-maven-3.8.6 export GRADLE_HOME=/Library/Java/Gradle/gradle-7.4.2 export GRADLE_USER_HOME=/Library/Java/Repository export PATH=$JAVA_HOME/bin:$M2_HOME/bin:$GRADLE_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib EOF C、方式三（yum）#搜索jdk安装包 yum search java|grep jdk #搜索jdk 1.8.0版本 yum search java|grep jdk | grep 1.8.0 Repodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast java-1.8.0-openjdk.i686 : OpenJDK Runtime Environment 8 java-1.8.0-openjdk.x86_64 : OpenJDK Runtime Environment 8 java-1.8.0-openjdk-accessibility.i686 : OpenJDK accessibility connector java-1.8.0-openjdk-accessibility.x86_64 : OpenJDK accessibility connector java-1.8.0-openjdk-accessibility-debug.i686 : OpenJDK 8 accessibility connector java-1.8.0-openjdk-accessibility-debug.x86_64 : OpenJDK 8 accessibility java-1.8.0-openjdk-debug.i686 : OpenJDK Runtime Environment 8 with full debug on java-1.8.0-openjdk-debug.x86_64 : OpenJDK Runtime Environment 8 with full debug java-1.8.0-openjdk-demo.i686 : OpenJDK Demos 8 java-1.8.0-openjdk-demo.x86_64 : OpenJDK Demos 8 java-1.8.0-openjdk-demo-debug.i686 : OpenJDK Demos 8 with full debug on java-1.8.0-openjdk-demo-debug.x86_64 : OpenJDK Demos 8 with full debug on java-1.8.0-openjdk-devel.i686 : OpenJDK Development Environment 8 java-1.8.0-openjdk-devel.x86_64 : OpenJDK Development Environment 8 java-1.8.0-openjdk-devel-debug.i686 : OpenJDK Development Environment 8 with java-1.8.0-openjdk-devel-debug.x86_64 : OpenJDK Development Environment 8 with java-1.8.0-openjdk-headless.i686 : OpenJDK Headless Runtime Environment 8 java-1.8.0-openjdk-headless.x86_64 : OpenJDK Headless Runtime Environment 8 java-1.8.0-openjdk-headless-debug.i686 : OpenJDK Runtime Environment with full java-1.8.0-openjdk-headless-debug.x86_64 : OpenJDK Runtime Environment with full java-1.8.0-openjdk-javadoc.noarch : OpenJDK 8 API documentation java-1.8.0-openjdk-javadoc-debug.noarch : OpenJDK 8 API documentation for java-1.8.0-openjdk-javadoc-zip.noarch : OpenJDK 8 API documentation compressed java-1.8.0-openjdk-javadoc-zip-debug.noarch : OpenJDK 8 API documentation java-1.8.0-openjdk-src.i686 : OpenJDK Source Bundle 8 java-1.8.0-openjdk-src.x86_64 : OpenJDK Source Bundle 8 java-1.8.0-openjdk-src-debug.i686 : OpenJDK Source Bundle 8 for packages with java-1.8.0-openjdk-src-debug.x86_64 : OpenJDK Source Bundle 8 for packages with #安装下载jdk1.8，下载之后默认的目录为： /usr/lib/jvm/ yum install java-1.8.0-openjdk #验证码 java -version 2、Ubuntu安装JDK A、方式一#搜索可用jdk列表 sudo apt search openjdk-8 #安装jdk sudo apt-get install openjdk-8-jdk #验证码 java -version B、方式二（压缩包）#需要提前下载好jdk-8u251-linux-x64.tar.gz tar -zvxf jdk-8u251-linux-x64.tar.gz #配置环境变量 sudo vi /etc/profile #将一下配置添加到文件末尾（注意JAVA_HOME的位置） #java export JAVA_HOME=/usr/java/jdk1.8.0_181 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib #重新加载配置 source /etc/profile #验证码 java -version"},{"title":"Linux工具安装","path":"/wiki/ruoyi-vue-plus/Linux工具安装.html","content":"1、lrzsz工具（上传下载）#Ubuntu下载安装包 sudo apt-get install -y lrzsz #CentOS下载安装包 yum install -y lrzsz #上传文件 rz #下载文件 sz 文件名 2、sftp工具（上传下载）#Xshell的sftp工具 #查看服务器的位置 pwd #查看本机的位置 lpwd #固定本机的位置 lcd #上传文件 或直接put 使用文件弹出框上传 #将本机lcd默认路径下的abc.txt 上传到服务器现在的位置 put abc.txt #上传多个文件 mput *.txt #下载文件 #将服务器现在位置的abc.txt文件，下载到lcd默认的本机的位置 get abc.txt #下载多个 mget *.txt 3、openssh-server工具（ssh远程）# Xshell无法SSH连接Ubuntu #下载ssh服务 sudo apt-get install openssh-server # 查看Ubuntu是否开启22端口 netstat -ntlp | grep 22 #检测端口是否开启 telnet 192.168.3.244 22 4、sshpass工具（ssh远程）# 安装软件包 sudo apt-get install sshpass # 直接远程Linux主机 # sshpass -p password ssh -p port username@IP 默认22端口 sshpass -p xxx ssh root@192.168.11.11 #从密码文件读取文件内容作为密码去远程连接主机 sshpass -f xxx.txt ssh root@192.168.11.11 #从远程主机上拉取文件到本地 sshpass -p &#123;密码&#125; scp &#123;用户名&#125;@&#123;主机IP&#125;:$&#123;远程主机目录&#125; $&#123;本地主机目录&#125; #将主机目录文件拷贝至远程主机目录 sshpass -p &#123;密码&#125; scp $&#123;本地主机目录&#125; &#123;用户名&#125;@&#123;主机IP&#125;:$&#123;远程主机目录&#125; #远程执行命令 sshpass -p password ssh username@host &lt;cmd> sshpass：用于非交互的ssh 密码验证 使用 -p 参数指定明文密码，然后直接登录远程服务器。 它支持密码从命令行,文件,环境变量中读取 1、从命令行方式传递密码 sshpass -p user_password ssh user_name@192.168.1.2 【登录远程机器】 sshpass -p user_password scp -P22 root@192.168.1.2:/home/test ./ 【远程机器/home/test 复制到本机当前目录】 还可以加参数 -q 【去掉进度显示】 2、从文件读取密码 echo \"user_password\" > user.passwd sshpass -f user.passwd ssh user_name@192.168.1.2 3、从环境变量获取密码 export SSHPASS=\"user_password\" sshpass -e ssh user_name@192.168.1.2 4、sshpass -p user_password ssh -o StrictHostKeyChecking=no user_name@192.168.1.2 【-o StrictHostKeyChecking=no 表示远程连接时不提示是否输入yes/no】 5、使用sshpass远程免密，在远程主机上执行shell命令，如下远程执行命令：touch /opt/file.txt sshpass -p user_password ssh -o StrictHostKeyChecking=no user_name@192.168.1.2 touch /opt/file.txt [注：shell命令要和sshpass命令写在一行] 5、ufw防火墙#安装防火墙 sudo apt-get install ufw #防火墙开启 sudo ufw enable #防火墙重启 sudo ufw reload #关闭防火墙 sudo ufw disable #开放22端口 sudo ufw allow 22 #禁用22端口 sudo ufw delete allow 22 #查看端口开启状态 sudo ufw status #允许此IP访问所有的本机端口 sudo ufw allow from 192.168.3.135 #禁止外部访问SMTP服务 sudo ufw deny smtp #删除上面建立的某条规则 sudo ufw delete allow smtp #推荐使用 sudo apt-get install ufw sudo ufw enable sudo ufw default deny 6.定时任务 #安装定时工具 yum install cronie #启动服务 service crond start #重启服务 service crond restart #关闭服务 service crond stop #重新加载服务 service crond reload #查看状态 service crond status 0 0 6 * * ? true > /var/log/nginx/access.log 0 0 6 * * ? true > /var/log/nginx/error.log :wq #保存 # 编辑定时命令 出发vim编辑器 crontab -e #查看当前所有定时任务 crontab -l #删除当前所有定时任务 crontab -r"}]